<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE FBType SYSTEM "../LibraryElement.dtd">
<FBType GUID="0cdd20ee-50c5-406d-9ff5-f9ef65f4555e" Name="Pusher_Element" Comment="Basic Function Block Type" Namespace="Main">
  <Identification Standard="61499-2" />
  <VersionInfo Organization="WBK hackaton" Version="0.0" Author="Lernfabrik" Date="21/06/2022" Remarks="Template" />
  <InterfaceList>
    <EventInputs>
      <Event Name="INIT" Comment="Initialization Request">
        <With Var="SetDistanceToBarrier" />
        <With Var="SetMyColorResponsibility" />
        <With Var="SetRetractDelay" />
      </Event>
      <Event Name="REQ" Comment="Normal Execution Request">
        <With Var="CurrentColor" />
        <With Var="LightBarrierPassed" />
        <With Var="PiecesSize" />
      </Event>
      <Event Name="LB_Passed">
        <With Var="CurrentColor" />
        <With Var="LightBarrierPassed" />
      </Event>
      <Event Name="RESET" />
    </EventInputs>
    <EventOutputs>
      <Event Name="INITO" Comment="Initialization Confirm">
        <With Var="DoPush" />
      </Event>
      <Event Name="CNF" Comment="Execution Confirmation">
        <With Var="DoPush" />
        <With Var="IsMyColor" />
        <With Var="PreActivated" />
      </Event>
      <Event Name="ACTIVATE">
        <With Var="DoPush" />
      </Event>
      <Event Name="DEACTIVATE" />
    </EventOutputs>
    <InputVars>
      <VarDeclaration Name="CurrentColor" Type="STRING" Comment="Color of the Element Currently at the last Barrier" />
      <VarDeclaration Name="SetDistanceToBarrier" Type="INT" />
      <VarDeclaration Name="SetMyColorResponsibility" Type="STRING" InitialValue="'BLUE'" Comment="Setup the Color I am responsible for" />
      <VarDeclaration Name="SetRetractDelay" Type="INT" />
      <VarDeclaration Name="LightBarrierPassed" Type="BOOL" />
      <VarDeclaration Name="PiecesSize" Type="INT" />
    </InputVars>
    <OutputVars>
      <VarDeclaration Name="DoPush" Type="BOOL" InitialValue="FALSE" Comment="Output event qualifier" />
      <VarDeclaration Name="IsMyColor" Type="STRING" />
      <VarDeclaration Name="PreActivated" Type="BOOL" InitialValue="FALSE" />
    </OutputVars>
  </InterfaceList>
  <BasicFB>
    <Attribute Name="FBType.Basic.Algorithm.Order" Value="INIT,REQ,TogDelay,demo,RESET_PUSHER,doPush" />
    <InternalVars>
      <VarDeclaration Name="MyColorResponsibility" Type="STRING" Comment="Elements of which color should I push out?" />
      <VarDeclaration Name="InOutState" Type="BOOL" InitialValue="FALSE" Comment="0 = Back 1 = Pusher out" />
      <VarDeclaration Name="LastColor" Type="STRING" />
      <VarDeclaration Name="DELAYON" Type="BOOL" />
      <VarDeclaration Name="DELAY_ON" Type="BOOL" InitialValue="FALSE" />
      <VarDeclaration Name="PushBool" Type="BOOL" />
      <VarDeclaration Name="hasPassedBarrier" Type="BOOL" />
    </InternalVars>
    <ECC>
      <ECState Name="START" Comment="Initial State" x="516.9412" y="321.4117" />
      <ECState Name="INIT" Comment="Initialization" x="923.5294" y="141.1765">
        <ECAction Algorithm="INIT" Output="INITO" />
      </ECState>
      <ECState Name="REQ" Comment="Normal execution" x="217.647" y="752.9412">
        <ECAction Algorithm="REQ" Output="CNF" />
      </ECState>
      <ECState Name="SetHasPassed" x="2942.603" y="235.6825">
        <ECAction Algorithm="demo" />
      </ECState>
      <ECState Name="RESET" x="1228" y="772">
        <ECAction Algorithm="RESET_PUSHER" Output="DEACTIVATE" />
        <ECAction Output="CNF" />
      </ECState>
      <ECState Name="DOPUSH" x="1560" y="516">
        <ECAction Algorithm="doPush" Output="ACTIVATE" />
      </ECState>
      <ECState Name="ACTIVATE" x="592" y="1172">
        <ECAction Algorithm="doPush" Output="ACTIVATE" />
      </ECState>
      <ECTransition Source="START" Destination="INIT" Condition="INIT" x="725.3746" y="115.561">
        <Attribute Name="Configuration.Transaction.BezierPoints" Value="173.3644,29.12613,194.0652,17.30426" />
      </ECTransition>
      <ECTransition Source="INIT" Destination="START" Condition="1" x="717.4395" y="293.2672">
        <Attribute Name="Configuration.Transaction.BezierPoints" Value="186.1277,72.82568,166.3582,79.54906" />
      </ECTransition>
      <ECTransition Source="REQ" Destination="START" Condition="1" x="300.6682" y="371.454">
        <Attribute Name="Configuration.Transaction.BezierPoints" Value="67.14809,101.9537,82.21172,63.83199" />
      </ECTransition>
      <ECTransition Source="START" Destination="REQ" Condition="REQ AND NOT hasPassedBarrier" x="359.2296" y="575.5925">
        <Attribute Name="Configuration.Transaction.BezierPoints" Value="96.41064,132.7131,80.23887,161.4859" />
      </ECTransition>
      <ECTransition Source="START" Destination="SetHasPassed" Condition="LB_Passed" x="1757.32" y="165.8441">
        <Attribute Name="Configuration.Transaction.BezierPoints" Value="356.4786,36.74335,534.1883,31.76107" />
      </ECTransition>
      <ECTransition Source="START" Destination="RESET" Condition="RESET" x="786.5083" y="648.5576">
        <Attribute Name="Configuration.Transaction.BezierPoints" Value="-247.2716,-130.6611,628.9408,471.9152" />
      </ECTransition>
      <ECTransition Source="RESET" Destination="START" Condition="1" x="878.8478" y="594.9148">
        <Attribute Name="Configuration.Transaction.BezierPoints" Value="240.055,163.8705,205.1348,141.6217" />
      </ECTransition>
      <ECTransition Source="START" Destination="DOPUSH" Condition="DoPush" x="1008.369" y="346.6671">
        <Attribute Name="Configuration.Transaction.BezierPoints" Value="221.9742,77.95744,278.401,87.94916" />
      </ECTransition>
      <ECTransition Source="DOPUSH" Destination="START" Condition="1" x="1016.602" y="485.7139">
        <Attribute Name="Configuration.Transaction.BezierPoints" Value="285.4596,130.5795,221.8454,118.8342" />
      </ECTransition>
      <ECTransition Source="START" Destination="ACTIVATE" Condition="PreActivated = 1 AND hasPassedBarrier" x="721.3575" y="720.1796">
        <Attribute Name="Configuration.Transaction.BezierPoints" Value="188.3797,146.7417,193.8672,208.927" />
      </ECTransition>
      <ECTransition Source="ACTIVATE" Destination="START" Condition="1" x="554.0405" y="821.7059">
        <Attribute Name="Configuration.Transaction.BezierPoints" Value="141.3614,242.7691,135.8739,180.5838" />
      </ECTransition>
      <ECTransition Source="SetHasPassed" Destination="START" Condition="NOT DoPush" x="1690.825" y="359.8579">
        <Attribute Name="Configuration.Transaction.BezierPoints" Value="509.7124,91.86347,336.624,97.91717" />
      </ECTransition>
      <ECTransition Source="SetHasPassed" Destination="DOPUSH" Condition="DoPush" x="2245.78" y="460.5381">
        <Attribute Name="Configuration.Transaction.BezierPoints" Value="602.0099,111.5244,517.9999,128.5573" />
      </ECTransition>
    </ECC>
    <Algorithm Name="INIT" Comment="Initialization algorithm">
      <ST Text="&#xD;&#xA;InOutState := 0;&#xD;&#xA;(*RetractDelay := 1;&#xD;&#xA;RemainingTicks := 0;&#xD;&#xA;DistanceToBarrier := SetDistanceToBarrier;*)&#xD;&#xA;MyColorResponsibility := SetMyColorResponsibility;&#xD;&#xA;hasPassedBarrier := FALSE;&#xD;&#xA;(* ToDo: Retract Once *)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;;&#xD;&#xA;" />
    </Algorithm>
    <Algorithm Name="REQ" Comment="Normally executed algorithm">
      <ST Text="&#xD;&#xA;(* Checkt, ob die eigene Farbe getroffen ist *)&#xD;&#xA;&#xD;&#xA;IF MyColorResponsibility = CurrentColor THEN&#xD;&#xA;	PreActivated := 1;&#xD;&#xA;	(* What happens if the same color comes twice in a cycle? -&gt; Oh, oh*)&#xD;&#xA;END_IF;&#xD;&#xA;&#xD;&#xA;IF PreActivated = 1 AND hasPassedBarrier = TRUE THEN&#xD;&#xA;	PreActivated := 0;	&#xD;&#xA;	hasPassedBarrier := FALSE;&#xD;&#xA;END_IF;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;" />
    </Algorithm>
    <Algorithm Name="TogDelay">
      <ST Text="&#xD;&#xA;DELAY_ON := NOT DELAY_ON;&#xD;&#xA;;" />
    </Algorithm>
    <Algorithm Name="demo">
      <ST Text="hasPassedBarrier := 1;&#xD;&#xA;IF MyColorResponsibility = CurrentColor THEN&#xD;&#xA;	DoPush := 1;&#xD;&#xA;END_IF;" />
    </Algorithm>
    <Algorithm Name="RESET_PUSHER">
      <ST Text="DoPush := 0;&#xD;&#xA;PreActivated := 0;&#xD;&#xA;hasPassedBarrier := FALSE;" />
    </Algorithm>
    <Algorithm Name="doPush">
      <ST Text="PushBool := 1;" />
    </Algorithm>
  </BasicFB>
</FBType>
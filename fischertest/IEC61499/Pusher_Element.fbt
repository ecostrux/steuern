<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE FBType SYSTEM "../LibraryElement.dtd">
<FBType GUID="0cdd20ee-50c5-406d-9ff5-f9ef65f4555e" Name="Pusher_Element" Comment="Basic Function Block Type" Namespace="Main">
  <Identification Standard="61499-2" />
  <VersionInfo Organization="WBK hackaton" Version="0.0" Author="Lernfabrik" Date="21/06/2022" Remarks="Template" />
  <InterfaceList>
    <EventInputs>
      <Event Name="INIT" Comment="Initialization Request">
        <With Var="SetDistanceToBarrier" />
        <With Var="SetMyColorResponsibility" />
        <With Var="SetRetractDelay" />
      </Event>
      <Event Name="REQ" Comment="Normal Execution Request">
        <With Var="CurrentColor" />
        <With Var="LightBarrierPassed" />
        <With Var="PiecesSize" />
      </Event>
      <Event Name="LB_Passed">
        <With Var="CurrentColor" />
        <With Var="LightBarrierPassed" />
      </Event>
      <Event Name="RESET" />
    </EventInputs>
    <EventOutputs>
      <Event Name="INITO" Comment="Initialization Confirm">
        <With Var="DoPush" />
      </Event>
      <Event Name="CNF" Comment="Execution Confirmation">
        <With Var="DoPush" />
        <With Var="IsMyColor" />
        <With Var="PreActivated" />
      </Event>
      <Event Name="DOPUSH">
        <With Var="DoPush" />
      </Event>
    </EventOutputs>
    <InputVars>
      <VarDeclaration Name="CurrentColor" Type="STRING" Comment="Color of the Element Currently at the last Barrier" />
      <VarDeclaration Name="SetDistanceToBarrier" Type="INT" />
      <VarDeclaration Name="SetMyColorResponsibility" Type="STRING" InitialValue="'BLUE'" Comment="Setup the Color I am responsible for" />
      <VarDeclaration Name="SetRetractDelay" Type="INT" />
      <VarDeclaration Name="LightBarrierPassed" Type="BOOL" />
      <VarDeclaration Name="PiecesSize" Type="INT" />
    </InputVars>
    <OutputVars>
      <VarDeclaration Name="DoPush" Type="BOOL" InitialValue="FALSE" Comment="Output event qualifier" />
      <VarDeclaration Name="IsMyColor" Type="STRING" />
      <VarDeclaration Name="PreActivated" Type="BOOL" InitialValue="FALSE" />
    </OutputVars>
  </InterfaceList>
  <BasicFB>
    <Attribute Name="FBType.Basic.Algorithm.Order" Value="INIT,REQ,TogDelay,demo,RESET_PUSHER,doPush" />
    <InternalVars>
      <VarDeclaration Name="DistanceToBarrier" Type="INT" InitialValue="2" Comment="Distance in Ticks to the Exit Barrier (Nr. 2)" />
      <VarDeclaration Name="RetractDelay" Type="INT" Comment="Time until the Pusher retrackts after pushing our thing away" />
      <VarDeclaration Name="MyColorResponsibility" Type="STRING" Comment="Elements of which color should I push out?" />
      <VarDeclaration Name="InOutState" Type="BOOL" InitialValue="FALSE" Comment="0 = Back 1 = Pusher out" />
      <VarDeclaration Name="RemainingTicks" Type="INT" />
      <VarDeclaration Name="tickCounter" Type="INT" />
      <VarDeclaration Name="delay" Type="INT" InitialValue="3" />
      <VarDeclaration Name="LastColor" Type="STRING" />
      <VarDeclaration Name="DELAYON" Type="BOOL" />
      <VarDeclaration Name="hasPassedBarrier" Type="BOOL" />
      <VarDeclaration Name="WithDrawCountdown" Type="INT" />
      <VarDeclaration Name="DELAY_ON" Type="BOOL" InitialValue="FALSE" />
      <VarDeclaration Name="PushBool" Type="BOOL" />
    </InternalVars>
    <ECC>
      <ECState Name="START" Comment="Initial State" x="560.9412" y="461.4117" />
      <ECState Name="INIT" Comment="Initialization" x="923.5294" y="141.1765">
        <ECAction Algorithm="INIT" Output="INITO" />
      </ECState>
      <ECState Name="REQ" Comment="Normal execution" x="217.647" y="752.9412">
        <ECAction Algorithm="REQ" Output="CNF" />
      </ECState>
      <ECState Name="SetHasPassed" x="2588.889" y="535.1111">
        <ECAction Algorithm="demo" />
      </ECState>
      <ECState Name="RESET" x="1248" y="696">
        <ECAction Algorithm="RESET_PUSHER" Output="CNF" />
      </ECState>
      <ECState Name="DOPUSH" x="1328" y="472">
        <ECAction Algorithm="doPush" Output="DOPUSH" />
      </ECState>
      <ECTransition Source="START" Destination="INIT" Condition="INIT" x="722.7416" y="184.6514">
        <Attribute Name="Configuration.Transaction.BezierPoints" Value="172.6048,50.39626,191.741,30.21489" />
      </ECTransition>
      <ECTransition Source="INIT" Destination="START" Condition="1" x="710.6171" y="351.2095">
        <Attribute Name="Configuration.Transaction.BezierPoints" Value="188.321,84.91138,166.4554,99.01258" />
      </ECTransition>
      <ECTransition Source="REQ" Destination="START" Condition="1" x="445.9459" y="478.0963">
        <Attribute Name="Configuration.Transaction.BezierPoints" Value="102.951,123.9062,130.8543,102.3257" />
      </ECTransition>
      <ECTransition Source="START" Destination="REQ" Condition="REQ AND NOT hasPassedBarrier" x="378.3521" y="626.897">
        <Attribute Name="Configuration.Transaction.BezierPoints" Value="104.3927,151.2717,89.38455,168.6958" />
      </ECTransition>
      <ECTransition Source="START" Destination="SetHasPassed" Condition="LB_Passed" x="1603.772" y="377.168">
        <Attribute Name="Configuration.Transaction.BezierPoints" Value="332.7651,85.12507,477.0786,91.35915" />
      </ECTransition>
      <ECTransition Source="START" Destination="RESET" Condition="RESET" x="845.6154" y="699.7016">
        <Attribute Name="Configuration.Transaction.BezierPoints" Value="-260.6455,2.016222,675.5739,368.0005" />
      </ECTransition>
      <ECTransition Source="RESET" Destination="START" Condition="1" x="926.1267" y="625.8043">
        <Attribute Name="Configuration.Transaction.BezierPoints" Value="248.4654,165.6926,218.3321,155.4211" />
      </ECTransition>
      <ECTransition Source="SetHasPassed" Destination="REQ" Condition="1" x="1798.533" y="1189.032">
        <Attribute Name="Configuration.Transaction.BezierPoints" Value="564.8677,330.7047,393.7791,346.4214" />
      </ECTransition>
      <ECTransition Source="START" Destination="DOPUSH" Condition="DoPush" x="912.9097" y="382.0984">
        <Attribute Name="Configuration.Transaction.BezierPoints" Value="209.0902,92.23794,244.3278,92.18974" />
      </ECTransition>
      <ECTransition Source="DOPUSH" Destination="START" Condition="1" x="931.1308" y="553.2635">
        <Attribute Name="Configuration.Transaction.BezierPoints" Value="252.8478,141.9074,212.7176,141.3535" />
      </ECTransition>
    </ECC>
    <Algorithm Name="INIT" Comment="Initialization algorithm">
      <ST Text="&#xD;&#xA;InOutState := 0;&#xD;&#xA;RetractDelay := 1;&#xD;&#xA;RemainingTicks := 0;&#xD;&#xA;MyColorResponsibility := SetMyColorResponsibility;&#xD;&#xA;DistanceToBarrier := SetDistanceToBarrier;&#xD;&#xA;hasPassedBarrier := FALSE;&#xD;&#xA;(* ToDo: Retract Once *)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;;&#xD;&#xA;" />
    </Algorithm>
    <Algorithm Name="REQ" Comment="Normally executed algorithm">
      <ST Text="&#xD;&#xA;(* Checkt, ob die eigene Farbe getroffen ist *)&#xD;&#xA;&#xD;&#xA;IF MyColorResponsibility = CurrentColor THEN&#xD;&#xA;	PreActivated := 1;&#xD;&#xA;	(* What happens if the same color comes twice in a cycle? -&gt; Oh, oh*)&#xD;&#xA;END_IF;&#xD;&#xA;&#xD;&#xA;IF PreActivated = 1 AND hasPassedBarrier = TRUE THEN&#xD;&#xA;		DoPush := 1;&#xD;&#xA;		PreActivated := 0;	&#xD;&#xA;		hasPassedBarrier := FALSE;&#xD;&#xA;		WithDrawCountdown := 5;&#xD;&#xA;END_IF;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;" />
    </Algorithm>
    <Algorithm Name="TogDelay">
      <ST Text="&#xD;&#xA;DELAY_ON := NOT DELAY_ON;&#xD;&#xA;;" />
    </Algorithm>
    <Algorithm Name="demo">
      <ST Text="hasPassedBarrier := 1;" />
    </Algorithm>
    <Algorithm Name="RESET_PUSHER">
      <ST Text="DoPush := 0;&#xD;&#xA;PreActivated := 0;&#xD;&#xA;hasPassedBarrier := FALSE;" />
    </Algorithm>
    <Algorithm Name="doPush">
      <ST Text="PushBool := 1;" />
    </Algorithm>
  </BasicFB>
</FBType>